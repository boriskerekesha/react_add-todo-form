{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","className","href","TodoInfo","title","user","completed","classNames","TodoList","todosItems","map","todo","key","todos","userId","usersFromServer","find","App","useState","setTitle","userName","setUserName","setTodosItems","isSubmit","setIsSubmit","isVisibleTittleError","setIsVisibleTittleError","useEffect","action","method","onSubmit","event","preventDefault","correctTitle","trimEnd","maxId","Math","max","apply","elem","selectedUser","newTodo","currentTodos","htmlFor","type","placeholder","value","onChange","lastSymbol","currentTarget","length","test","alert","valueTittle","slice","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2cb62c34.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export const UserInfo: React.FC<UserInfoType> = ({ name, email }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\n\nexport const TodoInfo: React.FC<Todo> = ({ title, user, completed }) => (\n  <article\n    className={classNames(\n      'TodoInfo',\n      { 'TodoInfo--completed': completed },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {title}\n    </h2>\n    {user && (\n      <UserInfo {...user} />\n    )}\n  </article>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\n\nexport const TodoList: React.FC<TodosItems> = ({ todosItems }) => {\n  return (\n    <section className=\"TodoList\">\n      {todosItems.map(todo => (\n        <TodoInfo {...todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userName, setUserName] = useState('');\n  const [todosItems, setTodosItems] = useState(todos);\n  const [isSubmit, setIsSubmit] = useState(false);\n  const [isVisibleTittleError, setIsVisibleTittleError] = useState(false);\n\n  useEffect(() => {\n    setIsVisibleTittleError(false);\n  }, [title]);\n\n  const resetForm = () => {\n    setTitle('');\n    setUserName('');\n    setIsSubmit(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsSubmit(true);\n\n    if (!title || !userName) {\n      setIsVisibleTittleError(true);\n\n      return;\n    }\n\n    const correctTitle = title.trimEnd();\n    const maxId = Math.max.apply(null, todosItems.map((elem) => elem.id));\n    const selectedUser = usersFromServer.find((user) => (\n      user.name === userName\n    ));\n\n    const newTodo = {\n      id: maxId + 1,\n      title: correctTitle,\n      userId: selectedUser?.id || null,\n      completed: false,\n      user: selectedUser || null,\n    };\n\n    setTodosItems((currentTodos) => [\n      ...currentTodos,\n      newTodo,\n    ]);\n\n    resetForm();\n  };\n\n  const handleInput = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const lastSymbol = event\n      .currentTarget.value[event.currentTarget.value.length - 1];\n\n    if (/[^\\d\\sA-Za-zA-ЯА-я]/.test(lastSymbol)\n      || event.currentTarget.value[0] === ' ') {\n      // eslint-disable-next-line no-alert\n      alert(`Title can contains letters (ru and en), digits,\n        and spaces in the middle of title`);\n\n      const valueTittle = event.currentTarget.value.slice(0, -1);\n\n      setTitle(valueTittle);\n\n      return;\n    }\n\n    setTitle(event.currentTarget.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title-input\">\n            Title\n          </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title-input\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleInput}\n          />\n          {!title && isVisibleTittleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user-input\">\n            User\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user-input\"\n            value={userName}\n            onChange={(event) => setUserName(event.target.value)}\n          >\n            <option\n              value=\"\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.name}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isSubmit && !userName && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todosItems={todosItems} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}